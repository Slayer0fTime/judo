# See README.md for introduction.

services:
  rabbitmq:
    # Stable version with management UI.
    image: rabbitmq:4.1.4-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"   # Default RabbitMQ port.
      - "15672:15672" # RabbitMQ management web UI.
    volumes:
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./config/definitions.json:/etc/rabbitmq/definitions.json:ro
    # This allows to start the gatekeeper service only when rabbitmq is ready
    # to accepts new AMQP connections.  Otherwise gatekeeper will crush after
    # first unsuccessfull connection try.
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      retries: 10
      timeout: 2s
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql.Dockerfile
    container_name: mysql
    ports:
      - "3306:3306" # Default MySQL port.
    env_file:
      - ./config/mysql.env
    # This allows to start the justchess service only when mysql is ready
    # to accepts new connections.  Otherwise justchess will crush after
    # first unsuccessfull connection try.
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      retries: 10
      timeout: 2s
    volumes:
      # Make db data persistent.
      - mysql_data:/var/lib/mysql
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  gatekeeper:
    build:
      context: .
      dockerfile: ./docker/gatekeeper.Dockerfile
    container_name: gatekeeper
    env_file:
      - ./config/gatekeeper.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "3503:3503" # Gatekeeper port.
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  justchess:
    build:
      context: .
      dockerfile: ./docker/justchess.Dockerfile
    container_name: justchess
    env_file:
      - ./config/justchess.env
    depends_on:
      mysql:
        condition: service_healthy
      gatekeeper:
        condition: service_started
    ports:
      - "3502:3502" # Justchess port.
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend.Dockerfile
    container_name: frontend
    env_file:
      - ./config/frontend.env
    depends_on:
      - justchess
    ports:
      - "3000:3000" # Default NextJS port.
    volumes:
      - ./repo/frontend:/app # Mount source code from host OS.
      - /app/node_modules    # Do not copy node_modules from container.
      - /app/.next
    command: npm run dev
    logging:
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mysql_data: